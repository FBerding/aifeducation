# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, version_1_0_0_dev]
  pull_request:
    branches: [main, master]

name: test-coverage.yaml

permissions: read-all

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: r-reticulate
          auto-update-conda: true
          python-version: 3.12
          channels: conda-forge
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true

      - name: setup r-reticulate conda
        shell: Rscript {0}
        run: |

          library(reticulate)
          python_packages<-c("transformers",
                             "tokenizers",
                             "datasets",
                             "codecarbon")
          envname<-"r-reticulate"

          conda_install(
            packages = c(
            "tensorflow<=2.15",
            "numpy<2"
            ),
            envname = envname,
            conda = "auto",
            pip = TRUE
          )

          conda_install(
            packages = c(
            "torch",
            "torcheval",
            "safetensors",
            "accelerate"),
            envname = envname,
            conda = "auto",
            pip = TRUE
          )

          conda_install(
            packages = python_packages,
            envname = envname,
            conda = "auto",
            pip = TRUE
          )

          path_to_python <- conda_python("r-reticulate")

          writeLines(sprintf("RETICULATE_PYTHON=%s", path_to_python),
                     Sys.getenv("GITHUB_ENV"))

      - name: Test coverage
        run: |
          gui_functions<-c(
            "start_aifeducation_studio",
            "Studio_Home_UI",
            "DataManagement_DataSetEditorUI",
            "DataManagement_RawTextsUI",
            "DataManagement_TableEditorUI",
            "TextEmbeddingModel_Use_UI",
            "TextEmbeddingModel_Create_UI",
            "DocumentPage_UI",
            "FeatureExtractors_Use_UI",
            "FeatureExtractors_Create_UI",
            "Classifiers_Use_UI",
            "Classifiers_Create_UI",
            "License_UI",
            "DataManagement_RawTextsServer",
            "DataManagement_DataSetEditorServer",
            "DataManagement_TableEditorServer",
            "TextEmbeddingModel_Create_Server",
            "TextEmbeddingModel_Use_Server",
            "DocumentPage_Server",
            "FeatureExtractor_Create_Server",
            "FeatureExtractors_Use_Server",
            "DocumentPage_Server",
            "Classifiers_Create_Server",
            "Classifiers_Use_Server",
            "License_Server",
            "ModelArchitecture_UI",
            "ModelArchitecture_Server",
            "BaseModel_Create_UI",
            "BaseModel_Create_Server",
            "BaseModel_UI",
            "BaseModel_Server",
            "Dataset_UI",
            "Dataset_Server",
            "TrainTuneSettings_UI",
            "TrainTuneSettings_Server",
            "BaseModel_Train_UI",
            "BaseModel_Train_Server"
          )

          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            function_exclusions = gui_functions,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: ${{ github.event_name != 'pull_request' && true || false }}
          file: ./cobertura.xml
          plugin: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
