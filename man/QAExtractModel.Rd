% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qa_extraction_models.R
\name{QAExtractModel}
\alias{QAExtractModel}
\title{Question-Answer-Models of Type Extraction}
\description{
This \link[R6]{R6} class stores the information for modeling a
question-answer-model. This kind of model extracts the answer from a given text.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model}}{('transformers.TFAutoModelForQuestionAnswering')\cr
Object of class transformers.TFAutoModelForQuestionAnswering from transformers
python library. Stores the qa model.}

\item{\code{tokenizer}}{('transformers.AutoTokenizer')\cr
Object of class transformers.AutoTokenizer from transformers python library.
Stores the tokenizer.}

\item{\code{qa_pipline}}{('transformers.QuestionAnsweringPipeline')\cr
Object of class transformers.QuestionAnsweringPipeline from transformers
python library.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-QAExtractModel-new}{\code{QAExtractModel$new()}}
\item \href{#method-QAExtractModel-save_model}{\code{QAExtractModel$save_model()}}
\item \href{#method-QAExtractModel-load_model}{\code{QAExtractModel$load_model()}}
\item \href{#method-QAExtractModel-answer_question}{\code{QAExtractModel$answer_question()}}
\item \href{#method-QAExtractModel-clone}{\code{QAExtractModel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QAExtractModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-QAExtractModel-new}{}}}
\subsection{Method \code{new()}}{
Method for creating a new question-answer-model based on a pretrained
model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QAExtractModel$new(
  model_name,
  model_version,
  model_language,
  model_license,
  model_dir_path
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_name}}{\code{Character} Name of the new model.}

\item{\code{model_version}}{\code{Character} Version of the model.}

\item{\code{model_language}}{\code{Character} Language the model supports.}

\item{\code{model_license}}{\code{Character} License of the model.}

\item{\code{model_dir_path}}{\code{string} Path to the directory where the model is
stored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QAExtractModel-save_model"></a>}}
\if{latex}{\out{\hypertarget{method-QAExtractModel-save_model}{}}}
\subsection{Method \code{save_model()}}{
Method for saving a question-answer-model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QAExtractModel$save_model(model_dir_path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_dir_path}}{\code{string} Path to the directory where the model
and the tokenizer should be stored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QAExtractModel-load_model"></a>}}
\if{latex}{\out{\hypertarget{method-QAExtractModel-load_model}{}}}
\subsection{Method \code{load_model()}}{
Method for loading a question-answer-model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QAExtractModel$load_model(model_dir_path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model_dir_path}}{\code{string} Path to the directory where the model
and the tokenizer are saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QAExtractModel-answer_question"></a>}}
\if{latex}{\out{\hypertarget{method-QAExtractModel-answer_question}{}}}
\subsection{Method \code{answer_question()}}{
Method for extracting answers from a given text.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QAExtractModel$answer_question(
  question,
  knowledge_base,
  n_answers = 1,
  doc_stride = 128,
  max_answer_len = 15,
  max_seq_len = 384,
  max_question_len = 64,
  handle_impossible_answer = FALSE,
  align_to_words = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{question}}{\code{string} Question to be answered.}

\item{\code{knowledge_base}}{\code{list} of raw texts where to search for the answer.}

\item{\code{n_answers}}{\code{int} Number of possible answers generated from the texts.}

\item{\code{doc_stride}}{\code{int} In case the knowledge base is too long
for the model to process at once, the text is divided into several overlapping
chunks. This parameter determines the size of the overlap.}

\item{\code{max_answer_len}}{\code{int} Maximum length in tokens for possible answers.
Only answers which are shorter are considered for an answer.}

\item{\code{max_seq_len}}{\code{int} Maximum length of a question and knowledge base after
tokenization. The context may be divided into several overlapping chunks.}

\item{\code{max_question_len}}{\code{int} The maximum length of the question after tokenization.
Longer sequences are truncated.}

\item{\code{handle_impossible_answer}}{\code{bool} \code{TRUE} if impossible answers
should be accepted.}

\item{\code{align_to_words}}{\code{bool} If true \code{TRUE} the algorithm tries to align
the answer to real words which increases the quality of the results for space
separated languages.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-QAExtractModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-QAExtractModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{QAExtractModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
