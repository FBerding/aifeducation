% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LargeDataSetForTexts.R
\name{LargeDataSetForText}
\alias{LargeDataSetForText}
\title{Abstract class for large data sets containing raw texts.}
\value{
Returns a new object of this class.
}
\description{
This object stores raw texts. The data of this objects is not
stored in memory directly. By using memory mapping these objects allow to work
with data sets which do not fit into memory/RAM.
}
\seealso{
Other Data Management: 
\code{\link{DataManagerClassifier}},
\code{\link{EmbeddedText}},
\code{\link{LargeDataSetForTextEmbeddings}}
}
\concept{Data Management}
\section{Super class}{
\code{\link[aifeducation:LargeDataSetBase]{aifeducation::LargeDataSetBase}} -> \code{LargeDataSetForText}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LargeDataSetForText-add_from_files_txt}{\code{LargeDataSetForText$add_from_files_txt()}}
\item \href{#method-LargeDataSetForText-add_from_files_pdf}{\code{LargeDataSetForText$add_from_files_pdf()}}
\item \href{#method-LargeDataSetForText-add_from_files_xlsx}{\code{LargeDataSetForText$add_from_files_xlsx()}}
\item \href{#method-LargeDataSetForText-add_from_data.frame}{\code{LargeDataSetForText$add_from_data.frame()}}
\item \href{#method-LargeDataSetForText-clone}{\code{LargeDataSetForText$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="get_colnames"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-get_colnames'><code>aifeducation::LargeDataSetBase$get_colnames()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="get_dataset"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-get_dataset'><code>aifeducation::LargeDataSetBase$get_dataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="get_ids"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-get_ids'><code>aifeducation::LargeDataSetBase$get_ids()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="load"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-load'><code>aifeducation::LargeDataSetBase$load()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="n_cols"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-n_cols'><code>aifeducation::LargeDataSetBase$n_cols()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="n_rows"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-n_rows'><code>aifeducation::LargeDataSetBase$n_rows()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="reduce_to_unique_ids"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-reduce_to_unique_ids'><code>aifeducation::LargeDataSetBase$reduce_to_unique_ids()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="save"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-save'><code>aifeducation::LargeDataSetBase$save()</code></a></span></li>
<li><span class="pkg-link" data-pkg="aifeducation" data-topic="LargeDataSetBase" data-id="select"><a href='../../aifeducation/html/LargeDataSetBase.html#method-LargeDataSetBase-select'><code>aifeducation::LargeDataSetBase$select()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LargeDataSetForText-add_from_files_txt"></a>}}
\if{latex}{\out{\hypertarget{method-LargeDataSetForText-add_from_files_txt}{}}}
\subsection{Method \code{add_from_files_txt()}}{
Method for adding raw texts saved within .txt files to the
data set. Please note
the the directory should contain one folder for each .txt file. In order to
create an informative data set every folder should contain the following
additional files:
\itemize{
\item bib_entry.txt: containing a text version of the bibliographic information
of the raw text.
\item license.txt: containing a statement about the license to use the raw text
such as CC BY.
}

The id of every .txt file is the file name without file extension. Please
be aware to provide unique file names.
Id and raw texts are mandatory, bibliographic and license information are optional.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LargeDataSetForText$add_from_files_txt(
  dir_path,
  batch_size = 500,
  log_file = NULL,
  log_write_interval = 2,
  log_top_value = 0,
  log_top_total = 1,
  log_top_message = NA,
  trace = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir_path}}{Path to the directory where the files are stored.}

\item{\code{batch_size}}{\code{int} determining the number of files to process at once.}

\item{\code{trace}}{\code{bool} If \code{TRUE} information on the progress is printed
to the console.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The method does not return anything. It adds new raw texts to
the data set.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LargeDataSetForText-add_from_files_pdf"></a>}}
\if{latex}{\out{\hypertarget{method-LargeDataSetForText-add_from_files_pdf}{}}}
\subsection{Method \code{add_from_files_pdf()}}{
Method for adding raw texts saved within .pdf files to the
data set. Please note
the the directory should contain one folder for each .pdf file. In order to
create an informative data set every folder should contain the following
additional files:
\itemize{
\item bib_entry.txt: containing a text version of the bibliographic information
of the raw text.
\item license.txt: containing a statement about the license to use the raw text
such as CC BY.
}

The id of every .pdf file is the file name without file extension. Please
be aware to provide unique file names.
Id and raw texts are mandatory, bibliographic and license information are optional.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LargeDataSetForText$add_from_files_pdf(
  dir_path,
  batch_size = 500,
  log_file = NULL,
  log_write_interval = 2,
  log_top_value = 0,
  log_top_total = 1,
  log_top_message = NA,
  trace = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir_path}}{Path to the directory where the files are stored.}

\item{\code{batch_size}}{\code{int} determining the number of files to process at once.}

\item{\code{trace}}{\code{bool} If \code{TRUE} information on the progress is printed
to the console.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The method does not return anything. It adds new raw texts to
the data set.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LargeDataSetForText-add_from_files_xlsx"></a>}}
\if{latex}{\out{\hypertarget{method-LargeDataSetForText-add_from_files_xlsx}{}}}
\subsection{Method \code{add_from_files_xlsx()}}{
Method for adding raw texts saved within .xlsx files to the
data set. The method assumes that the texts are saved in the rows and that the columns
store the id and the raw texts in the columns. In addition, a column for the
bibliography information and the license can be added. The column names
for these rows must be specified with the following arguments. They must be
the same for all .xlsx files in the chosen directory.
Id and raw texts are mandatory, bibliographic and license information are optional.
Additional columns are dropped.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LargeDataSetForText$add_from_files_xlsx(
  dir_path,
  trace = TRUE,
  id_column = "id",
  text_column = "text",
  bib_entry_column = "bib_entry",
  license_column = "license",
  log_file = NULL,
  log_write_interval = 2,
  log_top_value = 0,
  log_top_total = 1,
  log_top_message = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir_path}}{Path to the directory where the files are stored.}

\item{\code{trace}}{\code{bool} If \code{TRUE} prints information on the progress to the
console.}

\item{\code{id_column}}{\code{string} Name of the column storing the ids for the texts.}

\item{\code{text_column}}{\code{string} Name of the column storing the raw text.}

\item{\code{bib_entry_column}}{\code{string} Name of the column storing the bibliographic
information of the texts.}

\item{\code{license_column}}{\code{string} Name of the column storing information about
the licenses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The method does not return anything. It adds new raw texts to
the data set.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LargeDataSetForText-add_from_data.frame"></a>}}
\if{latex}{\out{\hypertarget{method-LargeDataSetForText-add_from_data.frame}{}}}
\subsection{Method \code{add_from_data.frame()}}{
Method for adding raw texts from a \code{data.frame}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LargeDataSetForText$add_from_data.frame(data_frame)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_frame}}{Object of class \code{data.frame} with at least the following
columns "id","text","bib_entry", and "license". If a column is missing
an error occurs. Additional columns are dropped.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The method does not return anything. It adds new raw texts to
the data set.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LargeDataSetForText-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LargeDataSetForText-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LargeDataSetForText$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
