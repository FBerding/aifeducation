// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// grad_mse
double grad_mse(double x);
RcppExport SEXP _aifeducation_grad_mse(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_mse(x));
    return rcpp_result_gen;
END_RCPP
}
// grad_tanh
double grad_tanh(double o_k, double o_j);
RcppExport SEXP _aifeducation_grad_tanh(SEXP o_kSEXP, SEXP o_jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type o_k(o_kSEXP);
    Rcpp::traits::input_parameter< double >::type o_j(o_jSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_tanh(o_k, o_j));
    return rcpp_result_gen;
END_RCPP
}
// multi_net_train
Rcpp::List multi_net_train(arma::mat input, Rcpp::CharacterVector output, arma::mat test_input, Rcpp::CharacterVector test_output, Rcpp::CharacterVector output_levels, Rcpp::NumericVector hidden, double learningrate, Rcpp::String act_fct, Rcpp::String act_fct_last, Rcpp::String err_msr_last, int freq_recalc_iota2, int max_iter, double cr_rel_change, double cr_abs_error, Rcpp::String monitor, int patience, bool return_best, bool trace);
RcppExport SEXP _aifeducation_multi_net_train(SEXP inputSEXP, SEXP outputSEXP, SEXP test_inputSEXP, SEXP test_outputSEXP, SEXP output_levelsSEXP, SEXP hiddenSEXP, SEXP learningrateSEXP, SEXP act_fctSEXP, SEXP act_fct_lastSEXP, SEXP err_msr_lastSEXP, SEXP freq_recalc_iota2SEXP, SEXP max_iterSEXP, SEXP cr_rel_changeSEXP, SEXP cr_abs_errorSEXP, SEXP monitorSEXP, SEXP patienceSEXP, SEXP return_bestSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type input(inputSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type output(outputSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type test_input(test_inputSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type test_output(test_outputSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type output_levels(output_levelsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type hidden(hiddenSEXP);
    Rcpp::traits::input_parameter< double >::type learningrate(learningrateSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type act_fct(act_fctSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type act_fct_last(act_fct_lastSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type err_msr_last(err_msr_lastSEXP);
    Rcpp::traits::input_parameter< int >::type freq_recalc_iota2(freq_recalc_iota2SEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type cr_rel_change(cr_rel_changeSEXP);
    Rcpp::traits::input_parameter< double >::type cr_abs_error(cr_abs_errorSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type monitor(monitorSEXP);
    Rcpp::traits::input_parameter< int >::type patience(patienceSEXP);
    Rcpp::traits::input_parameter< bool >::type return_best(return_bestSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(multi_net_train(input, output, test_input, test_output, output_levels, hidden, learningrate, act_fct, act_fct_last, err_msr_last, freq_recalc_iota2, max_iter, cr_rel_change, cr_abs_error, monitor, patience, return_best, trace));
    return rcpp_result_gen;
END_RCPP
}
// multi_net_predict_c
arma::vec multi_net_predict_c(arma::field<arma::mat> wts_list, arma::mat newdata, Rcpp::String act_fct, Rcpp::String act_fct_last);
RcppExport SEXP _aifeducation_multi_net_predict_c(SEXP wts_listSEXP, SEXP newdataSEXP, SEXP act_fctSEXP, SEXP act_fct_lastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type wts_list(wts_listSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type newdata(newdataSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type act_fct(act_fctSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type act_fct_last(act_fct_lastSEXP);
    rcpp_result_gen = Rcpp::wrap(multi_net_predict_c(wts_list, newdata, act_fct, act_fct_last));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aifeducation_grad_mse", (DL_FUNC) &_aifeducation_grad_mse, 1},
    {"_aifeducation_grad_tanh", (DL_FUNC) &_aifeducation_grad_tanh, 2},
    {"_aifeducation_multi_net_train", (DL_FUNC) &_aifeducation_multi_net_train, 18},
    {"_aifeducation_multi_net_predict_c", (DL_FUNC) &_aifeducation_multi_net_predict_c, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_aifeducation(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
