test_that("creation_classifier_neural_net", {
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=c(28,28),
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
})
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
devtools::load_all()
test_that("creation_classifier_neural_net", {
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=c(28,28),
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
})
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
devtools::load_all()
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
devtools::load_all()
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=c(28,28),
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
test_that("creation_classifier_neural_net", {
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=c(28,28),
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=c(28,28),
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
classifier<-NULL
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=NULL,
self_attention_heads=2,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
expect_s3_class(classifier,
class="TextEmbeddingClassifierNeuralNet")
})
devtools::load_all()
#-------------------------------------------------------------------------------
classifier<-TextEmbeddingClassifierNeuralNet$new(
name="movie_review_classifier",
label="Classifier for Estimating a Postive or Negative Rating of Movie Reviews",
text_embeddings=current_embeddings,
targets=example_targets,
hidden=NULL,
rec=c(28,28),
self_attention_heads = 0,
dropout=0.2,
recurrent_dropout=0.4,
l2_regularizer=0.01,
optimizer="adam",
act_fct="gelu",
rec_act_fct="tanh")
data_embeddings = current_embeddings,
classifier$train(data_embeddings = current_embeddings,
data_targets = example_targets,
data_n_test_samples=2,
use_baseline=TRUE,
bsl_val_size=0.25,
use_bsc=FALSE,
bsc_methods=c("dbsmote"),
bsc_max_k=10,
bsc_val_size=0.25,
use_bpl=FALSE,
bpl_max_steps=2,
bpl_epochs_per_step=1,
bpl_dynamic_inc=FALSE,
bpl_balance=TRUE,
bpl_max=1.00,
bpl_anchor=1.00,
bpl_min=0.00,
bpl_weight_inc=0.02,
bpl_weight_start=0.00,
bpl_model_reset=FALSE,
epochs=2,
batch_size=32,
dir_checkpoint=testthat::test_path("test_data/tmp"),
trace=TRUE,
view_metrics=FALSE,
keras_trace=1,
n_cores=1)
classifier$reliability$test_metric_mean
classifier$train(data_embeddings = current_embeddings,
data_targets = example_targets,
data_n_test_samples=2,
use_baseline=TRUE,
bsl_val_size=0.25,
use_bsc=FALSE,
bsc_methods=c("dbsmote"),
bsc_max_k=10,
bsc_val_size=0.25,
use_bpl=FALSE,
bpl_max_steps=2,
bpl_epochs_per_step=1,
bpl_dynamic_inc=FALSE,
bpl_balance=TRUE,
bpl_max=1.00,
bpl_anchor=1.00,
bpl_min=0.00,
bpl_weight_inc=0.02,
bpl_weight_start=0.00,
bpl_model_reset=FALSE,
epochs=20,
batch_size=32,
dir_checkpoint=testthat::test_path("test_data/tmp"),
trace=TRUE,
view_metrics=FALSE,
keras_trace=1,
n_cores=1)
classifier$reliability$test_metric_mean
devtools::document()
devtools::test()
devtools::document()
