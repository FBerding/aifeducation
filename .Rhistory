data_embeddings = imdb_embeddings$convert_to_LargeDataSetForTextEmbeddings(),
batch_size = 32,
trace = FALSE
)
save_to_disk(object = extractions,
dir_path = "Trial",
folder_name = "extraction_data")
runApp('Trial/ExtentedTaskApp.R')
rlang::last_trace()
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
getwd()
runApp('Trial/ExtentedTaskApp.R')
paste0("C:/Users/WissMit/Documents/aifeducation/test/testthat/","test_data/classifier")
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
devtools::load_all()
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
root_path_data=paste0("C:/Users/WissMit/Documents/aifeducation/tests/testthat/","test_data/classifier")
path=paste0("C:/Users/WissMit/Documents/aifeducation/tests/testthat/","test_data/classifier/imdb_embeddings.rda")
load(path)
feature_extractor=load(paste0(root_path_data,"/feature_extractor_pytorch/r_interface.rda"))
feature_extractor$load(paste0(root_path_data,"/feature_extractor_pytorch"))
aste0(root_path_data,"/feature_extractor_pytorch"
paste0(root_path_data,"/feature_extractor_pytorch")
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
paste0("C:/Users/WissMit/Documents/aifeducation/","Trial")
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
reticulate::py_module_available("torch")
runApp('Trial/ExtentedTaskApp.R')
runApp('Trial/ExtentedTaskApp.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
library(bslib)
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
bs_theme_preview()
install.packages("bsicons")
bs_theme_preview()
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
builtin_themes(5)
builtin_themes()
bootswatch_themes()
runApp('R/Studio.R')
runApp('R/Studio.R')
runApp('R/Studio.R')
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::load_all()
rlang::last_trace()
devtools::load_all()
devtools::load_all()
runApp('R/Studio.R')
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
runApp('R/Studio.R')
runApp('R/Studio.R')
devtools::load_all()
devtools::document()
devtools::document()
runApp('R/Studio.R')
runApp('R/Studio.R')
devtools::load_all()
devtools::load_all()
runApp('R/Studio.R')
styler:::style_active_file()
devtools::load_all()
runApp('R/Studio.R')
runApp('R/Studio.R')
devtools::load_all()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
#Create new data set
new_dataset=LargeDataSetForText$new()
styler:::style_active_file()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
shiny::removeModal()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
reticulate::py_available(T)
devtools::load_all()
start_studio_new()
library(bslib)
start_studio_new()
library(shiny)
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
new_dataset <- LargeDataSetForText$new()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE
)
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE
)
new_dataset
new_dataset$get_colnames()
new_dataset$n_rows()
devtools::load_all()
start_studio_new()
value=1
total=2
log_file="Trial"
log_file="Trial/trial_log"
write.csv(x=c(value,total),file=paste0(log_file,".log"))
data_point=c(value,total)
names(data_point)=c("value","total")
write.csv(x=data_point,file=paste0(log_file,".log"))
read.csv(paste0(log_file,".log"))
data_point=c(value,total)
names(data_point)=c("value","total")
data_point
as.data.frame(data_point)
as.data.frame(t(data_point))
t(data_point)
data_point=c(value,total)
names(data_point)=c("value","total")
write.csv(x=t(data_point),file=paste0(log_file,".log"),row.names = FALSE,
col.names = TRUE)
read.csv(paste0(log_file,".log"))
write.csv(x=t(data_point),file=paste0(log_file,".log"),row.names = FALSE)
abc=read.csv(paste0(log_file,".log"))
abc$value
devtools::load_all()
devtools::build()
start_aifeducation_studio()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
devtools::load_all()
start_studio_new()
getwd()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
start_studio_new()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
start_studio_new()
library(shiny)
library(bslib)
start_studio_new()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::test_active_file()
devtools::load_all()
start_studio_new()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
last_log=Sys.time()
last_log
last_log-sys.time()
last_log-Sys.time()
diff=last_log-Sys.time()
diff
diff
as.numeric(diff)
difftime(Sys.time(),last_log,units = "secs")
difftime(Sys.time(),last_log,units = "secs")[[1]]
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=past0(getwd(),"_log.log")
)
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0(getwd(),"_log.log")
)
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
library(shiny)
library(bslib)
start_studio_new()
start_studio_new()
devtools::load_all()
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
start_studio_new()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
start_studio_new()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
start_studio_new()
last_log=Sys.time()
diff=difftime(Sys.time(),last_log,units = "secs")[[1]]
diff
diff>2
start_studio_new()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
devtools::build()
install.packages("~/aifeducation_0.3.4.tar.gz", repos = NULL, type = "source")
reticulate::py_available(T)
devtools::load_all()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
styler:::style_active_file()
start_studio_new()
start_studio_new()
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
reticulate::py_available(T)
devtools::load_all()
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts_2/txts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
devtools::load_all()
new_dataset <- LargeDataSetForText$new()
root_path="C:/Users/WissMit/Desktop/aifeducation_test_files/raw_texts"
new_dataset$add_from_files_txt(
dir_path = root_path,
batch_size = 2,
trace = TRUE,
log_file=paste0("Trial/trial_log.log")
)
new_dataset$n_rows()
devtools::load_all()
devtools::load_all()
devtools::load_all()
start_studio_new()
library(shiny)
library(bslib)
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
start_studio_new()
top=NULL
middle=NULL
log=list(top=top,
middle=middle)
log[[1]]
devtools::load_all()
start_studio_new()
start_studio_new()
devtools::load_all()
start_studio_new()
start_studio_new()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
devtools::load_all()
start_studio_new()
start_studio_new()
devtools::load_all()
start_studio_new()
start_studio_new()
devtools::load_all()
devtools::load_all()
start_studio_new()
